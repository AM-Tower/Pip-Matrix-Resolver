/******************************************************************
 * File: MainWindow.h
 * Author: Jeffrey Scott Flesher
 * Description:
 *   Declares the MainWindow class for PipMatrixResolverQt.
 *   Provides tabbed UI (Main, History, Settings), menus, toolbar,
 *   requirements.txt loading (local & web), and integration with
 *   ResolverEngine, VenvManager, BatchRunner, MatrixHistory, and
 *   MatrixUtility.
 *
 * Version: 0.5
 * Date:    2025-11-01
 ******************************************************************/

#pragma once

#include <QMainWindow>
#include <QStringList>
#include <QPointer>

class QMenu;
class QAction;
class QTableView;
class QPlainTextEdit;
class QProgressBar;
class QStandardItemModel;

class ResolverEngine;
class VenvManager;
class BatchRunner;
class MatrixHistory;

QT_BEGIN_NAMESPACE
namespace Ui
{
class MainWindow;
}
QT_END_NAMESPACE

/******************************************************************
 * @brief The MainWindow class
 *
 * Provides the main application window and orchestrates:
 * - Tabbed UI (Main, History, Settings)
 * - Menus and toolbar actions
 * - Local/Web requirements loading
 * - History integration via MatrixHistory tab
 * - Engines (ResolverEngine, VenvManager, BatchRunner)
 ******************************************************************/
class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    explicit MainWindow( QWidget *parent = nullptr );
    ~MainWindow() override;

private slots:
    /**************************************************************
     * File menu actions
     **************************************************************/
    void openLocalRequirements();
    void fetchRequirementsFromUrl();
    void openMatrixHistory();
    void exitApp();

    /**************************************************************
     * Tools menu actions
     **************************************************************/
    void createOrUpdateVenv();
    void startResolve();
    void pauseResolve();
    void resumeResolve();
    void stopResolve();

    /**************************************************************
     * Batch menu actions
     **************************************************************/
    void runBatch();

    /**************************************************************
     * Help menu actions
     **************************************************************/
    void showAboutBox();
    void showReadmeDialog();

    /**************************************************************
     * Logging and progress
     **************************************************************/
    void appendLog( const QString &line );
    void updateProgress( int percent );
    void showCompiledResult( const QString &path );

private:
    /**************************************************************
     * Setup helpers
     **************************************************************/
    void setupUi();
    void setupMenus();
    void setupToolbar();
    void bindSignals();

    /**************************************************************
     * Utility helpers
     **************************************************************/
    void applyToolsEnabled( bool enabled );
    void refreshRecentMenus();

private:
    /**************************************************************
     * UI (from .ui via uic)
     **************************************************************/
    Ui::MainWindow *ui;

    /**************************************************************
     * Views and models (Main tab)
     **************************************************************/
    QTableView *requirementsView;
    QTableView *matrixView;
    QPlainTextEdit *logView;
    QProgressBar *progress;
    QStandardItemModel *requirementsModel;

    /**************************************************************
     * History tab (MatrixHistory promoted widget)
     **************************************************************/
    MatrixHistory *historyWidget;

    /**************************************************************
     * Engine components
     **************************************************************/
    QPointer<ResolverEngine> resolver;
    QPointer<VenvManager>    venv;
    QPointer<BatchRunner>    batch;

    /**************************************************************
     * Menus and actions
     **************************************************************/
    QMenu   *toolsMenu;
    QMenu   *recentWebMenu;
    QMenu   *recentLocalMenu;

    QAction *actionCreateVenv;
    QAction *actionResolveMatrix;
    QAction *actionPause;
    QAction *actionResume;
    QAction *actionStop;

    /**************************************************************
     * State
     **************************************************************/
    bool        hasValidRequirements;
    QStringList historyRecentLocal;
    QStringList historyRecentWeb;
};

/************** End of MainWindow.h *************************/
